<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.franxx.blog.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="top.franxx.blog.pojo.User" >
    <id column="users_id" property="usersId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="INTEGER" />
    <result column="user_grade" property="userGrade" jdbcType="INTEGER" />
    <result column="user_end_time" property="userEndTime" jdbcType="TIMESTAMP" />
    <result column="user_sex" property="userSex" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="top.franxx.blog.pojo.User" extends="BaseResultMap" >
    <result column="user_desc" property="userDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    users_id, user_name, password, user_email, user_status, user_grade, user_end_time, 
    user_sex
  </sql>
  <sql id="Blob_Column_List" >
    user_desc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="top.franxx.blog.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="top.franxx.blog.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where users_id = #{usersId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where users_id = #{usersId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="top.franxx.blog.pojo.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.franxx.blog.pojo.User" >
    insert into user (users_id, user_name, password, 
      user_email, user_status, user_grade, 
      user_end_time, user_sex, user_desc
      )
    values (#{usersId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{userStatus,jdbcType=INTEGER}, #{userGrade,jdbcType=INTEGER}, 
      #{userEndTime,jdbcType=TIMESTAMP}, #{userSex,jdbcType=VARCHAR}, #{userDesc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.franxx.blog.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="usersId != null" >
        users_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
      <if test="userGrade != null" >
        user_grade,
      </if>
      <if test="userEndTime != null" >
        user_end_time,
      </if>
      <if test="userSex != null" >
        user_sex,
      </if>
      <if test="userDesc != null" >
        user_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="usersId != null" >
        #{usersId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userGrade != null" >
        #{userGrade,jdbcType=INTEGER},
      </if>
      <if test="userEndTime != null" >
        #{userEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null" >
        #{userDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.franxx.blog.pojo.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.usersId != null" >
        users_id = #{record.usersId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null" >
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null" >
        user_status = #{record.userStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userGrade != null" >
        user_grade = #{record.userGrade,jdbcType=INTEGER},
      </if>
      <if test="record.userEndTime != null" >
        user_end_time = #{record.userEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userSex != null" >
        user_sex = #{record.userSex,jdbcType=VARCHAR},
      </if>
      <if test="record.userDesc != null" >
        user_desc = #{record.userDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update user
    set users_id = #{record.usersId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_status = #{record.userStatus,jdbcType=INTEGER},
      user_grade = #{record.userGrade,jdbcType=INTEGER},
      user_end_time = #{record.userEndTime,jdbcType=TIMESTAMP},
      user_sex = #{record.userSex,jdbcType=VARCHAR},
      user_desc = #{record.userDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set users_id = #{record.usersId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_status = #{record.userStatus,jdbcType=INTEGER},
      user_grade = #{record.userGrade,jdbcType=INTEGER},
      user_end_time = #{record.userEndTime,jdbcType=TIMESTAMP},
      user_sex = #{record.userSex,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.franxx.blog.pojo.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userGrade != null" >
        user_grade = #{userGrade,jdbcType=INTEGER},
      </if>
      <if test="userEndTime != null" >
        user_end_time = #{userEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null" >
        user_desc = #{userDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where users_id = #{usersId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="top.franxx.blog.pojo.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=INTEGER},
      user_grade = #{userGrade,jdbcType=INTEGER},
      user_end_time = #{userEndTime,jdbcType=TIMESTAMP},
      user_sex = #{userSex,jdbcType=VARCHAR},
      user_desc = #{userDesc,jdbcType=LONGVARCHAR}
    where users_id = #{usersId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.franxx.blog.pojo.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=INTEGER},
      user_grade = #{userGrade,jdbcType=INTEGER},
      user_end_time = #{userEndTime,jdbcType=TIMESTAMP},
      user_sex = #{userSex,jdbcType=VARCHAR}
    where users_id = #{usersId,jdbcType=BIGINT}
  </update>
</mapper>